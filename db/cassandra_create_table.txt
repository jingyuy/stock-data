
CREATE KEYSPACE stockapp WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };

CREATE TABLE stockapp.incomestatement (
	ticker VARCHAR,
	type VARCHAR,
	fiscalDateEnding VARCHAR,
	reportedCurrency VARCHAR,
	grossProfit BIGINT,
	totalRevenue BIGINT,
	costOfRevenue BIGINT,
	costofGoodsAndServicesSold BIGINT,
	operatingIncome BIGINT,
	sellingGeneralAndAdministrative BIGINT,
	researchAndDevelopment BIGINT,
	operatingExpenses BIGINT,
	investmentIncomeNet BIGINT,
	netInterestIncome BIGINT,
	interestIncome BIGINT,
	interestExpense BIGINT,
	nonInterestIncome BIGINT,
	otherNonOperatingIncome BIGINT,
	depreciation BIGINT,
	depreciationAndAmortization BIGINT,
	incomeBeforeTax BIGINT,
	incomeTaxExpense BIGINT,
	interestAndDebtExpense BIGINT,
	netIncomeFromContinuingOperations BIGINT,
	comprehensiveIncomeNetOfTax BIGINT,
	ebit BIGINT,
	ebitda BIGINT,
	netIncome BIGINT,
	PRIMARY KEY (ticker, type, fiscalDateEnding))
WITH CLUSTERING
ORDER BY
	(
		type ASC,
		fiscalDateEnding DESC
);

CREATE TABLE stockapp.balancesheet (
	ticker VARCHAR,
	"type" VARCHAR,
	fiscalDateEnding VARCHAR,
	reportedCurrency VARCHAR,
	commonStock BIGINT,
	commonStockSharesOutstanding BIGINT,
	PRIMARY KEY (ticker, type, fiscalDateEnding))
WITH CLUSTERING
ORDER BY
	(
		type ASC,
		fiscalDateEnding DESC
);

CREATE TABLE stockapp.stockmetric (
	ticker VARCHAR,
	type VARCHAR,
	date VARCHAR,
	totalrevenue BIGINT,
	totalrevenuegrowthrate float,
	operatingexpense BIGINT,
	operatingexpensegrowthrate float,
	commonstocksharesoutstanding float,
	targetprice2years20multiples float,
	targetprice3years20multiples float,
	PRIMARY KEY (ticker, type, date))
WITH CLUSTERING
ORDER BY
	(
		type ASC,
		date DESC
);

CREATE TABLE stockapp.stockprice (
	ticker VARCHAR,
	date VARCHAR,
	open float,
	high float,
	low float,
	close float,
	volume float,
	dividends float,
	stock_splits float,
	updated_time VARCHAR,
	PRIMARY KEY (ticker, date))
WITH CLUSTERING
ORDER BY
(
		date ASC
);

CREATE TABLE stockapp.alert (
	date VARCHAR,
	alert VARCHAR,
	ticker VARCHAR,
	updated_time VARCHAR,
	PRIMARY KEY (date, ticker, alert))
WITH CLUSTERING
ORDER BY
(
    ticker ASC,
	alert ASC
);

